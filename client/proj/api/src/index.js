/**
 * 推しカレ
 * 推しカレのAPI
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: sample@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Artist from './model/Artist';
import Event from './model/Event';
import Group from './model/Group';
import PaginatedArtistList from './model/PaginatedArtistList';
import PaginatedEventList from './model/PaginatedEventList';
import PaginatedGroupList from './model/PaginatedGroupList';
import PaginatedSignupList from './model/PaginatedSignupList';
import PaginatedUserList from './model/PaginatedUserList';
import PatchedArtist from './model/PatchedArtist';
import PatchedEvent from './model/PatchedEvent';
import PatchedSignup from './model/PatchedSignup';
import Signup from './model/Signup';
import TokenObtainPair from './model/TokenObtainPair';
import TokenRefresh from './model/TokenRefresh';
import User from './model/User';
import ApiApi from './api/ApiApi';
import ArtistsApi from './api/ArtistsApi';
import EventsApi from './api/EventsApi';
import GroupsApi from './api/GroupsApi';
import SignupApi from './api/SignupApi';
import UsersApi from './api/UsersApi';


/**
* 推しカレのAPI.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var OpenapiJsClient = require('index'); // See note below*.
* var xxxSvc = new OpenapiJsClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new OpenapiJsClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new OpenapiJsClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new OpenapiJsClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Artist model constructor.
     * @property {module:model/Artist}
     */
    Artist,

    /**
     * The Event model constructor.
     * @property {module:model/Event}
     */
    Event,

    /**
     * The Group model constructor.
     * @property {module:model/Group}
     */
    Group,

    /**
     * The PaginatedArtistList model constructor.
     * @property {module:model/PaginatedArtistList}
     */
    PaginatedArtistList,

    /**
     * The PaginatedEventList model constructor.
     * @property {module:model/PaginatedEventList}
     */
    PaginatedEventList,

    /**
     * The PaginatedGroupList model constructor.
     * @property {module:model/PaginatedGroupList}
     */
    PaginatedGroupList,

    /**
     * The PaginatedSignupList model constructor.
     * @property {module:model/PaginatedSignupList}
     */
    PaginatedSignupList,

    /**
     * The PaginatedUserList model constructor.
     * @property {module:model/PaginatedUserList}
     */
    PaginatedUserList,

    /**
     * The PatchedArtist model constructor.
     * @property {module:model/PatchedArtist}
     */
    PatchedArtist,

    /**
     * The PatchedEvent model constructor.
     * @property {module:model/PatchedEvent}
     */
    PatchedEvent,

    /**
     * The PatchedSignup model constructor.
     * @property {module:model/PatchedSignup}
     */
    PatchedSignup,

    /**
     * The Signup model constructor.
     * @property {module:model/Signup}
     */
    Signup,

    /**
     * The TokenObtainPair model constructor.
     * @property {module:model/TokenObtainPair}
     */
    TokenObtainPair,

    /**
     * The TokenRefresh model constructor.
     * @property {module:model/TokenRefresh}
     */
    TokenRefresh,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
    * The ApiApi service constructor.
    * @property {module:api/ApiApi}
    */
    ApiApi,

    /**
    * The ArtistsApi service constructor.
    * @property {module:api/ArtistsApi}
    */
    ArtistsApi,

    /**
    * The EventsApi service constructor.
    * @property {module:api/EventsApi}
    */
    EventsApi,

    /**
    * The GroupsApi service constructor.
    * @property {module:api/GroupsApi}
    */
    GroupsApi,

    /**
    * The SignupApi service constructor.
    * @property {module:api/SignupApi}
    */
    SignupApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi
};
